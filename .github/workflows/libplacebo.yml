name: libplacebo

on: [push, pull_request]

jobs:
  build:

    env:
      PLACEBO_DIR: placebo-dir

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Install Vulkan
      env:
        VULKAN_PKG: libvulkan-dev mesa-vulkan-drivers vulkan-utils
      run: |
        sudo apt-get install $VULKAN_PKG
    - name: Install Python3 packages
      env:
        PYTHON3_PKG: python3-setuptools python3-wheel
      run: |
        sudo apt-get install $PYTHON3_PKG
    - name: Install meson and ninja
      run: |
        sudo pip3 install meson ninja
    - name: Install sdl2
      run: |
        sudo apt-get update
        sudo apt-get install libsdl2-dev libsdl2-image-dev
    - name: Cache shaderc
      uses: actions/cache@preview
      id: cache
      with:
        path: shaderc
        key: ${{ runner.os }}-${{ hashFiles('**/libplacebo-sys/build.rs')}}
    - name: Build shaderc
      if: steps.cache.outputs.cache-hit != 'true'
      env:
        GLSLANG_REPO: https://github.com/KhronosGroup/glslang.git
        SPIRV_TOOLS_REPO: https://github.com/KhronosGroup/SPIRV-Tools.git
        SPIRV_HEADERS_REPO: https://github.com/KhronosGroup/SPIRV-Headers.git
      run: |
        git clone --depth 1 https://github.com/google/shaderc
        cd shaderc
        git clone --depth 1 $GLSLANG_REPO third_party/glslang
        git clone --depth 1 $SPIRV_TOOLS_REPO third_party/spirv-tools
        git clone --depth 1 $SPIRV_HEADERS_REPO third_party/spirv-headers
        mkdir -p build
        cd build
        cmake -GNinja \
              -DCMAKE_BUILD_TYPE=Release \
              -DBUILD_SHARED_LIBS=1 \
              -DBUILD_TESTING=0 \
              -DSHADERC_SKIP_TESTS=1 \
              ..
        ninja
    - name: Copy shaderc libraries
      run: |
        cd shaderc/build
        mkdir -p $HOME/$PLACEBO_DIR
        cp -a libshaderc*/libshaderc*.a $HOME/$PLACEBO_DIR
        cp -a libshaderc*/libshaderc*.so* $HOME/$PLACEBO_DIR
        cp -a ../libshaderc*/include/shaderc $HOME/$PLACEBO_DIR
    - name: Install libplacebo
      run: |
        git clone --depth 1 https://code.videolan.org/videolan/libplacebo.git
        cd libplacebo
        CFLAGS=-I$HOME/$PLACEBO_DIR LDFLAGS=-Wl,-L$HOME/$PLACEBO_DIR \
        meson build -Dprefix=$HOME/$PLACEBO_DIR --buildtype release
        ninja -C build
        ninja -C build install
    - name: Run tests
      env:
        PKG_PATH: lib/x86_64-linux-gnu/pkgconfig
      run: |
        export PKG_CONFIG_PATH=$HOME/$PLACEBO_DIR/$PKG_PATH:$PKG_CONFIG_PATH
        export LD_LIBRARY_PATH=$HOME/$PLACEBO_DIR:$LD_LIBRARY_PATH
        cargo test --all-features
